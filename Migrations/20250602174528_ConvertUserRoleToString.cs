using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Auto_Insurance_Management_System.Migrations
{
    /// <inheritdoc />
    public partial class ConvertUserRoleToString : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            // This part is auto-generated by "Add-Migration" and should remain as is.
            migrationBuilder.AlterColumn<string>(
                name: "Role",
                table: "AspNetUsers",
                type: "nvarchar(max)", // You might want to change max to a smaller, more appropriate size like nvarchar(20)
                nullable: false,
                oldClrType: typeof(int),
                oldType: "int");

            // <<< ADD THESE LINES TO CONVERT EXISTING NUMERIC ROLES TO STRINGS >>>
            // These SQL commands will update the 'Role' column for existing users.
            // Assuming: '0' maps to 'ADMIN', '1' to 'AGENT', '2' to 'CUSTOMER'.
            // Adjust these WHERE clauses if your numeric roles were stored differently (e.g., as strings '0', '1', '2').
            migrationBuilder.Sql("UPDATE AspNetUsers SET Role = 'ADMIN' WHERE Role = '0';");
            migrationBuilder.Sql("UPDATE AspNetUsers SET Role = 'AGENT' WHERE Role = '1';");
            migrationBuilder.Sql("UPDATE AspNetUsers SET Role = 'CUSTOMER' WHERE Role = '2';");
            // <<< END OF ADDED LINES >>>
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            // This method is for reverting the migration.
            // If you have existing users, reverting this might lose data if you don't convert back.
            // For simplicity, for this change, you might consider this migration irreversible if you have live data.
            migrationBuilder.AlterColumn<int>(
                name: "Role",
                table: "AspNetUsers",
                type: "int",
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(max)");
        }
    }
}
@model IEnumerable<SupportTicket>
@{
    ViewData["Title"] = "Support Tickets";
}

<div class="container mt-4">

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>Success!</strong> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>Error!</strong> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">Support Tickets</h2>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i> Create New Ticket
        </a>
    </div>

    <form asp-action="Index" method="get" class="row g-2 mb-4">
        <div class="col-md-4">
            <input type="text" name="searchTerm" value="@ViewBag.SearchTerm" 
                   class="form-control" placeholder="Search tickets...">
        </div>
        <div class="col-md-3">
            <select name="status" class="form-select" asp-items="Html.GetEnumSelectList<TicketStatus>()">
                <option value="">All Statuses</option>
            </select>
        </div>
        <div class="col-md-auto">
            <button type="submit" class="btn btn-info">
                <i class="fas fa-search me-1"></i> Search
            </button>
        </div>
    </form>

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center">
            No support tickets found.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-bordered table-striped table-hover align-middle">
                <thead class="table-light">
                    <tr>
                        <th>Ticket ID</th>
                        <th>Policy Number</th>
                        <th>Query Type</th>
                        <th>Created At</th>
                        <th>Status</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.TicketId</td>
                            <td>@item.Policy?.PolicyNumber</td>
                            <td>@item.QueryType.GetDisplayName()</td>
                            <td>@item.CreatedAt.ToString("dd MMM yyyy")</td>
                            <td>
                                <span class="badge rounded-pill @GetStatusBadgeClass(item.Status)">
                                    @item.Status.GetDisplayName()
                                </span>
                            </td>
                            <td class="text-center">
                                <a asp-action="Details" asp-route-id="@item.TicketId"
                                   class="btn btn-sm btn-outline-info">
                                    <i class="fas fa-eye me-1"></i> Details
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

</div>

@functions {
    public string GetStatusBadgeClass(TicketStatus status)
    {
        return status switch
        {
            TicketStatus.Open => "bg-warning text-dark",
            TicketStatus.InProgress => "bg-info text-dark",
            TicketStatus.Resolved => "bg-success text-white",
            TicketStatus.Closed => "bg-secondary text-white",
            _ => "bg-light text-dark"
        };
    }
}
